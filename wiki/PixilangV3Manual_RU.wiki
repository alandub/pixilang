<wiki:toc max_depth="3" />

= Что такое Pixilang =

Pixilang — кросс-платформенный язык программирования для мультимедийных приложений, так или иначе связанных со звуком или графикой. Примеры: игры, презентации, открытки, синтезаторы, демки.

Основные приемущества:
 * прост в освоении;
 * легко устанавливается;
 * программа на Pixilang пишется один раз, после чего без проблем запускается в любой операционной системе;
 * исходный код Pixilang полностью открыт.

= Основы =

Основа Pixilang - это контейнеры (или pixi-контейнеры, как их иногда называют). Что такое контейнер? Если в двух словах, то это двухмерный массив, таблица из X колонок и Y строк. Каждая ячейка этой таблицы - число определенного формата. Формат задан один на весь контейнер. Например, ячейки могут хранить цвета пикселей, тогда контейнер превращается в картинку. Контейнер с таким же успехом может быть строкой текста, куском звука и т.д. Если вы знакомы с другими языками программирования, то считайте контейнер массивом (X*Y) ячеек. 

Каждый контейнер после создания имеет свой порядковый номер.

= Встроенные функции =

== Работа с контейнерами ==

=== new ===

Создать новый контейнер с данными.

*Параметры ( xsize, ysize, el_size_in_bytes, el_type )*
 * xsize - ширина.
 * ysize - высота.
 * el_size_in_bytes - размер (в байтах) элемента (ячейки) контейнера. Значения: 0 (размер одного пикселя); 1; 2; 4; 8.
 * el_type - тип элемента. Значения: 0 - знаковое целое (integer); 1 - число с плавающей запятой (floating point); 2 - динамический тип.

*Возвращаемое значение*

Номер пикси-контейнера или -1, если произошла ошибка при создании.

*Примеры*
{{{
p = new() //Создать контейнер 1x1. Размер элемента = размер пикселя. Тип элемента = integer.
p = new( 4 ) //Создать контейнер 4x1. Размер элемента = размер пикселя. Тип элемента = integer.
p = new( 4, 4 ) //Создать контейнер 4x4. Размер элемента = размер пикселя. Тип элемента = integer.
p = new( 4, 4, 2 ) //Создать контейнер 4x1. Размер элемента = 2 байта. Тип элемента = integer.
p = new( 4, 4, 4, 1 ) //Создать контейнер 4x4. Размер элемента = 4 байта. Тип элемента = floating point.
}}}

=== remove ===

Удалить контейнер.

*Параметры ( pixi )*
 * pixi - номер контейнера.

*Примеры*
{{{
p = new() //Создаем новый контейнер
remove( p ) //Удаляем его
}}}

=== resize ===

Изменить параметры контейнера.

*Параметры ( pixi, xsize, ysize, el_size_in_bytes, el_type )*
 * pixi - номер контейнера.
 * xsize - ширина.
 * ysize - высота.
 * el_size_in_bytes - размер (в байтах) элемента (ячейки) контейнера. Значения: 0 (размер одного пикселя); 1; 2; 4; 8.
 * el_type - тип элемента. Значения: 0 - знаковое целое (integer); 1 - число с плавающей запятой (floating point); 2 - динамический тип.

-1 в любом из параметров будет означать, что данный параметр контейнера остается прежним.

*Примеры*
{{{
p = new() //Создаем новый контейнер 1x1
resize( p, 32 ) //Изменяем его размер на 32x1
remove( p ) //Удаляем контейнер
}}}

=== clean ===

Очистить контейнер (заполнить нулями).

*Параметры ( pixi )*
 * pixi - номер контейнера.

*Примеры*
{{{
p = new() //Создаем новый контейнер
clean( p ) //Очищаем его
remove( p ) //И удаляем
}}}

== Системные функции (совместимость с POSIX) ==

=== fopen ===

=== fclose ===

=== fputc ===

=== fwrite ===

=== fgetc ===

=== fread ===

=== feof ===

=== fflush ===

=== fseek ===

=== ftell ===

=== remove_file ===

=== rename_file ===

=== system ===