<wiki:toc max_depth="3" />

= What is Pixilang =

Pixilang â€” cross-platform programming language for graphics/sound applications.

= Details =

= Built-in functions =

== Work with containers (memory allocation) ==

=== new ===

Create new data container.

*Parameters ( xsize, ysize, el_size_in_bytes, el_type )*
 * xsize - width.
 * ysize - height.
 * el_size_in_bytes - size (in bytes) of the atomic element of the container. Valid values: 0 (pixel size); 1; 2; 4; 8.
 * el_type - type of the atomic element of the container. Valid values: 0 - signed integer; 1 - floating point; 2 - dynamic type.

*Return value*

Number of the container, or -1 (error).

*Examples*
{{{
p = new() //Create 1x1 container. Element size = pixel size. Element type = integer.
p = new( 4 ) //Create 4x1 container. Element size = pixel size. Element type = integer.
p = new( 4, 4 ) //Create 4x4 container. Element size = pixel size. Element type = integer.
p = new( 4, 4, 2 ) //Create 4x4 container. Element size = 2 bytes. Element type = integer.
p = new( 4, 4, 4, 1 ) //Create 4x4 container. Element size = 4 bytes. Element type = floating point.
}}}

=== remove ===

Remove a container.

*Parameters ( pixi )*
 * pixi - number of a container.

*Examples*
{{{
p = new() //Create new container
remove( p ) //Remove it
}}}

=== resize ===

Resize a container.

*Parameters ( pixi, xsize, ysize, el_size_in_bytes, el_type )*
 * pixi - number of a container.
 * xsize - new width (or -1 if width not changed).
 * ysize - height (or -1 if width not changed).
 * el_size_in_bytes - size (in bytes) of the atomic element of the container. Valid values: 0 (pixel size); 1; 2; 4; 8; -1 -  not changed.
 * el_type - type of the atomic element of the container. Valid values: 0 - signed integer; 1 - floating point; 2 - dynamic type; -1 - not changed.

*Examples*
{{{
p = new() //Create new container
resize( p, 32 ) //Resize it from 1x1 to 32x1
remove( p ) //Remove
}}}

=== clean ===

Clean a container (fill with zeroes).

*Parameters ( pixi )*
 * pixi - number of a container.

*Examples*
{{{
p = new() //Create new container
clean( p ) //Clean
remove( p ) //Remove
}}}

== System functions (compatibility with POSIX) ==

=== fopen ===

=== fclose ===

=== fputc ===

=== fwrite ===

=== fgetc ===

=== fread ===

=== feof ===

=== fflush ===

=== fseek ===

=== ftell ===

=== remove_file ===

=== rename_file ===

=== system ===